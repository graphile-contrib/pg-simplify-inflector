--- unsimplified
+++ simplified
@@ -18,7 +18,7 @@
   ): Node
 
   """Reads and enables pagination through a set of `Something`."""
-  allSomethings(
+  somethings(
     """Only read the first `n` values of the set."""
     first: Int
 
@@ -47,7 +47,7 @@
   ): SomethingsConnection
 
   """Reads a set of `Something`."""
-  allSomethingsList(
+  somethingsList(
     """Only read the first `n` values of the set."""
     first: Int
 
@@ -64,7 +64,7 @@
   ): [Something!]
 
   """Reads and enables pagination through a set of `SomethingDatum`."""
-  allSomethingData(
+  somethingData(
     """Only read the first `n` values of the set."""
     first: Int
 
@@ -93,7 +93,7 @@
   ): SomethingDataConnection
 
   """Reads a set of `SomethingDatum`."""
-  allSomethingDataList(
+  somethingDataList(
     """Only read the first `n` values of the set."""
     first: Int
 
@@ -108,17 +108,17 @@
     """
     condition: SomethingDatumCondition
   ): [SomethingDatum!]
-  somethingBySomeId(someId: Int!): Something
-  somethingDatumBySomethingDataId(somethingDataId: Int!): SomethingDatum
+  something(someId: Int!): Something
+  somethingDatum(somethingDataId: Int!): SomethingDatum
 
   """Reads a single `Something` using its globally unique `ID`."""
-  something(
+  somethingByNodeId(
     """The globally unique `ID` to be used in selecting a single `Something`."""
     nodeId: ID!
   ): Something
 
   """Reads a single `SomethingDatum` using its globally unique `ID`."""
-  somethingDatum(
+  somethingDatumByNodeId(
     """
     The globally unique `ID` to be used in selecting a single `SomethingDatum`.
     """
@@ -233,7 +233,7 @@
   data: String
 
   """Reads a single `Something` that is related to this `SomethingDatum`."""
-  somethingBySomeId: Something
+  some: Something
 }
 
 """A `SomethingDatum` edge in the connection."""
@@ -344,69 +344,69 @@
   ): CreateSomethingDatumPayload
 
   """Updates a single `Something` using its globally unique id and a patch."""
-  updateSomething(
+  updateSomethingByNodeId(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
-    input: UpdateSomethingInput!
+    input: UpdateSomethingByNodeIdInput!
   ): UpdateSomethingPayload
 
   """Updates a single `Something` using a unique key and a patch."""
-  updateSomethingBySomeId(
+  updateSomething(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
-    input: UpdateSomethingBySomeIdInput!
+    input: UpdateSomethingInput!
   ): UpdateSomethingPayload
 
   """
   Updates a single `SomethingDatum` using its globally unique id and a patch.
   """
-  updateSomethingDatum(
+  updateSomethingDatumByNodeId(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
-    input: UpdateSomethingDatumInput!
+    input: UpdateSomethingDatumByNodeIdInput!
   ): UpdateSomethingDatumPayload
 
   """Updates a single `SomethingDatum` using a unique key and a patch."""
-  updateSomethingDatumBySomethingDataId(
+  updateSomethingDatum(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
-    input: UpdateSomethingDatumBySomethingDataIdInput!
+    input: UpdateSomethingDatumInput!
   ): UpdateSomethingDatumPayload
 
   """Deletes a single `Something` using its globally unique id."""
-  deleteSomething(
+  deleteSomethingByNodeId(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
-    input: DeleteSomethingInput!
+    input: DeleteSomethingByNodeIdInput!
   ): DeleteSomethingPayload
 
   """Deletes a single `Something` using a unique key."""
-  deleteSomethingBySomeId(
+  deleteSomething(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
-    input: DeleteSomethingBySomeIdInput!
+    input: DeleteSomethingInput!
   ): DeleteSomethingPayload
 
   """Deletes a single `SomethingDatum` using its globally unique id."""
-  deleteSomethingDatum(
+  deleteSomethingDatumByNodeId(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
-    input: DeleteSomethingDatumInput!
+    input: DeleteSomethingDatumByNodeIdInput!
   ): DeleteSomethingDatumPayload
 
   """Deletes a single `SomethingDatum` using a unique key."""
-  deleteSomethingDatumBySomethingDataId(
+  deleteSomethingDatum(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
-    input: DeleteSomethingDatumBySomethingDataIdInput!
+    input: DeleteSomethingDatumInput!
   ): DeleteSomethingDatumPayload
 }
 
@@ -468,7 +468,7 @@
   query: Query
 
   """Reads a single `Something` that is related to this `SomethingDatum`."""
-  somethingBySomeId: Something
+  some: Something
 
   """An edge for our `SomethingDatum`. May be used by Relay 1."""
   somethingDatumEdge(
@@ -519,8 +519,8 @@
   ): SomethingsEdge
 }
 
-"""All input for the `updateSomething` mutation."""
-input UpdateSomethingInput {
+"""All input for the `updateSomethingByNodeId` mutation."""
+input UpdateSomethingByNodeIdInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
@@ -535,7 +535,7 @@
   """
   An object where the defined keys will be set on the `Something` being updated.
   """
-  somethingPatch: SomethingPatch!
+  patch: SomethingPatch!
 }
 
 """
@@ -546,8 +546,8 @@
   name: String
 }
 
-"""All input for the `updateSomethingBySomeId` mutation."""
-input UpdateSomethingBySomeIdInput {
+"""All input for the `updateSomething` mutation."""
+input UpdateSomethingInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
@@ -557,7 +557,7 @@
   """
   An object where the defined keys will be set on the `Something` being updated.
   """
-  somethingPatch: SomethingPatch!
+  patch: SomethingPatch!
   someId: Int!
 }
 
@@ -578,7 +578,7 @@
   query: Query
 
   """Reads a single `Something` that is related to this `SomethingDatum`."""
-  somethingBySomeId: Something
+  some: Something
 
   """An edge for our `SomethingDatum`. May be used by Relay 1."""
   somethingDatumEdge(
@@ -587,8 +587,8 @@
   ): SomethingDataEdge
 }
 
-"""All input for the `updateSomethingDatum` mutation."""
-input UpdateSomethingDatumInput {
+"""All input for the `updateSomethingDatumByNodeId` mutation."""
+input UpdateSomethingDatumByNodeIdInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
@@ -603,7 +603,7 @@
   """
   An object where the defined keys will be set on the `SomethingDatum` being updated.
   """
-  somethingDatumPatch: SomethingDatumPatch!
+  patch: SomethingDatumPatch!
 }
 
 """
@@ -615,8 +615,8 @@
   data: String
 }
 
-"""All input for the `updateSomethingDatumBySomethingDataId` mutation."""
-input UpdateSomethingDatumBySomethingDataIdInput {
+"""All input for the `updateSomethingDatum` mutation."""
+input UpdateSomethingDatumInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
@@ -626,7 +626,7 @@
   """
   An object where the defined keys will be set on the `SomethingDatum` being updated.
   """
-  somethingDatumPatch: SomethingDatumPatch!
+  patch: SomethingDatumPatch!
   somethingDataId: Int!
 }
 
@@ -640,7 +640,7 @@
 
   """The `Something` that was deleted by this mutation."""
   something: Something
-  deletedSomethingId: ID
+  deletedSomethingNodeId: ID
 
   """
   Our root query field type. Allows us to run any query from our mutation payload.
@@ -654,8 +654,8 @@
   ): SomethingsEdge
 }
 
-"""All input for the `deleteSomething` mutation."""
-input DeleteSomethingInput {
+"""All input for the `deleteSomethingByNodeId` mutation."""
+input DeleteSomethingByNodeIdInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
@@ -668,8 +668,8 @@
   nodeId: ID!
 }
 
-"""All input for the `deleteSomethingBySomeId` mutation."""
-input DeleteSomethingBySomeIdInput {
+"""All input for the `deleteSomething` mutation."""
+input DeleteSomethingInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
@@ -688,7 +688,7 @@
 
   """The `SomethingDatum` that was deleted by this mutation."""
   somethingDatum: SomethingDatum
-  deletedSomethingDatumId: ID
+  deletedSomethingDatumNodeId: ID
 
   """
   Our root query field type. Allows us to run any query from our mutation payload.
@@ -696,7 +696,7 @@
   query: Query
 
   """Reads a single `Something` that is related to this `SomethingDatum`."""
-  somethingBySomeId: Something
+  some: Something
 
   """An edge for our `SomethingDatum`. May be used by Relay 1."""
   somethingDatumEdge(
@@ -705,8 +705,8 @@
   ): SomethingDataEdge
 }
 
-"""All input for the `deleteSomethingDatum` mutation."""
-input DeleteSomethingDatumInput {
+"""All input for the `deleteSomethingDatumByNodeId` mutation."""
+input DeleteSomethingDatumByNodeIdInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
@@ -719,8 +719,8 @@
   nodeId: ID!
 }
 
-"""All input for the `deleteSomethingDatumBySomethingDataId` mutation."""
-input DeleteSomethingDatumBySomethingDataIdInput {
+"""All input for the `deleteSomethingDatum` mutation."""
+input DeleteSomethingDatumInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
